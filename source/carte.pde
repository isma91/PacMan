
int[][] carte(){
  size(800,850);
  int [][]tab=new int[22][20];

     
     tab[2][0]=0;
     tab[2][1]=0;
     tab[2][2]=0;
     tab[2][3]=0;
     tab[2][4]=0;
     tab[2][5]=0;
     tab[2][6]=0;
     tab[2][7]=0;
     tab[2][8]=0;
     tab[2][9]=0;
     tab[2][10]=0;
     tab[2][11]=0;
     tab[2][12]=0;
     tab[2][13]=0;
     tab[2][14]=0;
     tab[2][15]=0;
     tab[2][16]=0;
     tab[2][17]=0;
     tab[2][18]=0;
     tab[2][19]=0;

     tab[3][0]=0;
     tab[3][1]=0;
     tab[3][2]=1;
     tab[3][3]=1;
     tab[3][4]=0;
     tab[3][5]=1;
     tab[3][6]=0;
     tab[3][7]=1;
     tab[3][8]=1;
     tab[3][9]=1;
     tab[3][10]=1;
     tab[3][11]=1;
     tab[3][12]=1;
     tab[3][13]=0;
     tab[3][14]=1;
     tab[3][15]=0;
     tab[3][16]=1;
     tab[3][17]=1;
     tab[3][18]=0;
     tab[3][19]=0;
  
     tab[4][0]=0;
     tab[4][1]=0;
     tab[4][2]=0;
     tab[4][3]=0;
     tab[4][4]=0;
     tab[4][5]=0;
     tab[4][6]=0;
     tab[4][7]=0;
     tab[4][8]=0;
     tab[4][9]=0;
     tab[4][10]=0;
     tab[4][11]=0;
     tab[4][12]=0;
     tab[4][13]=0;
     tab[4][14]=0;
     tab[4][15]=0;
     tab[4][16]=0;
     tab[4][17]=0;
     tab[4][18]=0;
     tab[4][19]=0;
     
     tab[5][0]=0;
     tab[5][1]=0;
     tab[5][2]=1;
     tab[5][3]=1;
     tab[5][4]=0;
     tab[5][5]=1;
     tab[5][6]=1;
     tab[5][7]=1;
     tab[5][8]=0;
     tab[5][9]=1;
     tab[5][10]=1;
     tab[5][11]=0;
     tab[5][12]=1;
     tab[5][13]=1;
     tab[5][14]=1;
     tab[5][15]=0;
     tab[5][16]=1;
     tab[5][17]=1;
     tab[5][18]=0;
     tab[5][19]=0;
     
     tab[6][0]=0;
     tab[6][1]=0;
     tab[6][2]=0;
     tab[6][3]=0;
     tab[6][4]=0;
     tab[6][5]=0;
     tab[6][6]=0;
     tab[6][7]=0;
     tab[6][8]=0;
     tab[6][9]=1;
     tab[6][10]=1;
     tab[6][11]=0;
     tab[6][12]=0;
     tab[6][13]=0;
     tab[6][14]=0;
     tab[6][15]=0;
     tab[6][16]=0;
     tab[6][17]=0;
     tab[6][18]=0;
     tab[6][19]=0;
     
     tab[7][0]=0;
     tab[7][1]=0;
     tab[7][2]=0;
     tab[7][3]=1;
     tab[7][4]=0;
     tab[7][5]=1;
     tab[7][6]=0;
     tab[7][7]=1;
     tab[7][8]=1;
     tab[7][9]=1;
     tab[7][10]=1;
     tab[7][11]=1;
     tab[7][12]=1;
     tab[7][13]=0;
     tab[7][14]=1;
     tab[7][15]=0;
     tab[7][16]=1;
     tab[7][17]=0;
     tab[7][18]=0;
     tab[7][19]=0;
     
     tab[8][0]=0;
     tab[8][1]=1;
     tab[8][2]=0;
     tab[8][3]=1;
     tab[8][4]=0;
     tab[8][5]=1;
     tab[8][6]=0;
     tab[8][7]=0;
     tab[8][8]=0;
     tab[8][9]=0;
     tab[8][10]=0;
     tab[8][11]=0;
     tab[8][12]=0;
     tab[8][13]=0;
     tab[8][14]=1;
     tab[8][15]=0;
     tab[8][16]=1;
     tab[8][17]=0;
     tab[8][18]=1;
     tab[8][19]=0;
     
     tab[9][0]=0;
     tab[9][1]=0;
     tab[9][2]=0;
     tab[9][3]=0;
     tab[9][4]=0;
     tab[9][5]=0;
     tab[9][6]=0;
     tab[9][7]=1;
     tab[9][8]=1;
     tab[9][9]=1;
     tab[9][10]=1;
     tab[9][11]=1;
     tab[9][12]=1;
     tab[9][13]=0;
     tab[9][14]=0;
     tab[9][15]=0;
     tab[9][16]=0;
     tab[9][17]=0;
     tab[9][18]=0;
     tab[9][19]=0;
     
     tab[10][0]=0;
     tab[10][1]=0;
     tab[10][2]=1;
     tab[10][3]=1;
     tab[10][4]=0;
     tab[10][5]=1;
     tab[10][6]=0;
     tab[10][7]=1;
     tab[10][8]=1;
     tab[10][9]=1;
     tab[10][10]=1;
     tab[10][11]=1;
     tab[10][12]=1;
     tab[10][13]=0;
     tab[10][14]=1;
     tab[10][15]=0;
     tab[10][16]=1;
     tab[10][17]=1;
     tab[10][18]=0;
     tab[10][19]=0;
     
     tab[11][0]=0;
     tab[11][1]=0;
     tab[11][2]=1;
     tab[11][3]=1;
     tab[11][4]=0;
     tab[11][5]=1;
     tab[11][6]=0;
     tab[11][7]=0;
     tab[11][8]=0;
     tab[11][9]=0;
     tab[11][10]=0;
     tab[11][11]=0;
     tab[11][12]=0;
     tab[11][13]=0;
     tab[11][14]=1;
     tab[11][15]=0;
     tab[11][16]=1;
     tab[11][17]=1;
     tab[11][18]=0;
     tab[11][19]=0;
     
     tab[12][0]=0;
     tab[12][1]=0;
     tab[12][2]=0;
     tab[12][3]=0;
     tab[12][4]=0;
     tab[12][5]=1;
     tab[12][6]=1;
     tab[12][7]=1;
     tab[12][8]=0;
     tab[12][9]=1;
     tab[12][10]=1;
     tab[12][11]=0;
     tab[12][12]=1;
     tab[12][13]=1;
     tab[12][14]=1;
     tab[12][15]=0;
     tab[12][16]=0;
     tab[12][17]=0;
     tab[12][18]=0;
     tab[12][19]=0;
     
     tab[13][0]=0;
     tab[13][1]=0;
     tab[13][2]=0;
     tab[13][3]=1;
     tab[13][4]=0;
     tab[13][5]=1;
     tab[13][6]=0;
     tab[13][7]=0;
     tab[13][8]=0;
     tab[13][9]=1;
     tab[13][10]=1;
     tab[13][11]=0;
     tab[13][12]=0;
     tab[13][13]=0;
     tab[13][14]=1;
     tab[13][15]=0;
     tab[13][16]=1;
     tab[13][17]=0;
     tab[13][18]=0;
     tab[13][19]=0;
     
     tab[14][0]=0;
     tab[14][1]=1;
     tab[14][2]=0;
     tab[14][3]=1;
     tab[14][4]=0;
     tab[14][5]=1;
     tab[14][6]=0;
     tab[14][7]=1;
     tab[14][8]=1;
     tab[14][9]=1;
     tab[14][10]=1;
     tab[14][11]=1;
     tab[14][12]=1;
     tab[14][13]=0;
     tab[14][14]=1;
     tab[14][15]=0;
     tab[14][16]=1;
     tab[14][17]=0;
     tab[14][18]=1;
     tab[14][19]=0;
     
     tab[15][0]=0;
     tab[15][1]=0;
     tab[15][2]=0;
     tab[15][3]=0;
     tab[15][4]=0;
     tab[15][5]=1;
     tab[15][6]=0;
     tab[15][7]=0;
     tab[15][8]=0;
     tab[15][9]=0;
     tab[15][10]=0;
     tab[15][11]=0;
     tab[15][12]=0;
     tab[15][13]=0;
     tab[15][14]=1;
     tab[15][15]=0;
     tab[15][16]=0;
     tab[15][17]=0;
     tab[15][18]=0;
     tab[15][19]=0;
     
     tab[16][0]=0;
     tab[16][1]=0;
     tab[16][2]=1;
     tab[16][3]=1;
     tab[16][4]=0;
     tab[16][5]=1;
     tab[16][6]=0;
     tab[16][7]=1;
     tab[16][8]=1;
     tab[16][9]=1;
     tab[16][10]=1;
     tab[16][11]=1;
     tab[16][12]=1;
     tab[16][13]=0;
     tab[16][14]=1;
     tab[16][15]=0;
     tab[16][16]=1;
     tab[16][17]=1;
     tab[16][18]=0;
     tab[16][19]=0;
     
     tab[17][0]=0;
     tab[17][1]=0;
     tab[17][2]=0;
     tab[17][3]=0;
     tab[17][4]=0;
     tab[17][5]=0;
     tab[17][6]=0;
     tab[17][7]=0;
     tab[17][8]=0;
     tab[17][9]=1;
     tab[17][10]=1;
     tab[17][11]=0;
     tab[17][12]=0;
     tab[17][13]=0;
     tab[17][14]=0;
     tab[17][15]=0;
     tab[17][16]=0;
     tab[17][17]=0;
     tab[17][18]=0;
     tab[17][19]=0;
     
     tab[18][0]=0;
     tab[18][1]=0;
     tab[18][2]=1;
     tab[18][3]=1;
     tab[18][4]=0;
     tab[18][5]=1;
     tab[18][6]=1;
     tab[18][7]=1;
     tab[18][8]=0;
     tab[18][9]=1;
     tab[18][10]=1;
     tab[18][11]=0;
     tab[18][12]=1;
     tab[18][13]=1;
     tab[18][14]=1;
     tab[18][15]=0;
     tab[18][16]=1;
     tab[18][17]=1;
     tab[18][18]=0;
     tab[18][19]=0;
     
     tab[19][0]=0;
     tab[19][1]=0;
     tab[19][2]=0;
     tab[19][3]=0;
     tab[19][4]=0;
     tab[19][5]=0;
     tab[19][6]=0;
     tab[19][7]=0;
     tab[19][8]=0;
     tab[19][9]=0;
     tab[19][10]=0;
     tab[19][11]=0;
     tab[19][12]=0;
     tab[19][13]=0;
     tab[19][14]=0;
     tab[19][15]=0;
     tab[19][16]=0;
     tab[19][17]=0;
     tab[19][18]=0;
     tab[19][19]=0;
  
   /* tab[20][0]=0;
     tab[20][1]=1;
     tab[20][2]=1;
     tab[20][3]=1;
     tab[20][4]=1;
     tab[20][5]=1;
     tab[20][6]=1;
     tab[20][7]=1;
     tab[20][8]=0;
     tab[20][9]=1;
     tab[20][10]=1;
     tab[20][11]=0;
     tab[20][12]=1;
     tab[20][13]=1;
     tab[20][14]=1;
     tab[20][15]=1;
     tab[20][16]=1;
     tab[20][17]=1;
     tab[20][18]=1;
     tab[20][19]=0;
   
   */
    return(tab);
      
}
void bleu(int i,int j){
 
  fill(0,0,153);
  rect(j*40,i*40,40,40);
}

void noir(int i,int j){
 
  fill(0,0,0);
  rect(j*40,i*40,40,40);
}

  void pacgum(int i,int j){
  
  fill(255,255,0);
  
  ellipse(20+j*40,20+i*40,12,12);
  
  
  }
void affiche(int[][] tab){
   for (int j=1;j<19;j++){
      for (int i=2;i<20;i++){
     
     
    if(tab[i][j]==1){
      bleu(i,j);
    }
    
   
   if(tab[i][j]==0){
      pacgum(i,j);
      }
   if(tab[i][j]==2){
      noir(i,j);   
      }
   }
   
}
}

